<# domain ECommerce\Shopping\Cart;

use Core;
use Core\ValueObject\Identifier;
use Core\ValueObject\Boolean;
use ECommerce\Shopping\Entity;
use ECommerce\Shopping\ValueObject;

create Aggregate
{
	state : {

		<Boolean> $is_created;
		<Boolean> $is_checked_out;
		<Entity\Cart> $cart;
		<ValueObject\ProductIndex> $products;

		when(<Event\Created> $event)
		{
			$this->is_created = new Boolean(true);
			$this->cart = $event->cart;
		};

		when(<Event\CheckedOut> $event)
		{
			$projection->checkout($event->id);
		};
	};

	handle(<Command\Create> $command)
	{
		assert not Created;
		assert not OnlyActiveMemberCart($command->member_id);

		apply Created($command->cart);
		apply Empty;
	};
	
};

#>
